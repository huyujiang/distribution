#!/usr/bin/env python

import argparse
import json
import sys
import urllib2

parser = argparse.ArgumentParser(description='Issue PlyQL query.')
parser.add_argument('--url', metavar='url', type=str, default='http://localhost:9095/plyql', help='PlyQL query url')
parser.add_argument('--output-type', metavar='type', type=str, default='tsv', help='json, tsv, csv')
parser.add_argument('--verbose', '-v', action='store_true', help='Print PlyQL POST query before sending')
parser.add_argument('query', type=str, help='PlyQL query')
args = parser.parse_args()

data = {
  'query' : args.query,
  'outputType' : args.output_type
}

try:
  if args.verbose:
    sys.stderr.write('POST: {}\n'.format(args.url))
    sys.stderr.write(json.dumps(data, sort_keys=True, indent=2, separators=(',', ': ')).rstrip())
    sys.stderr.write('\n\n')
    sys.stderr.flush()
  req = urllib2.Request(args.url, json.dumps(data), {'Content-Type' : 'application/json'})
  response = urllib2.urlopen(req)
  print response.read().rstrip()
except urllib2.URLError as e:
  sys.stderr.write("[{0}]\n".format(str(e)))
  if hasattr(e, 'read'):
    sys.stderr.write(e.read())
  sys.stderr.write('\n')
